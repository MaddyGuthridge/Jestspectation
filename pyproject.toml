[tool.poetry]
name = "Jestspectation"
version = "1.4.3"
description = "Pattern matching tools to test complex data structures"
readme = "README.md"

authors = ["Maddy Guthridge <hello@maddyguthridge.com>"]
license = "MIT"

repository = "https://github.com/MaddyGuthridge/Jestspectation"
documentation = "https://maddyguthridge.github.io/Jestspectation"

keywords = ["jest", "pattern", "matching", "pytest", "equality"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Framework :: Pytest",
    "Topic :: Software Development :: Testing",
    "Typing :: Typed",
]
include = ["py.typed"]

packages = [{ include = "jestspectation" }]

[tool.poetry.plugins.pytest11]
jestspectation = "jestspectation.pytest"

[tool.poetry.urls]
"Online Documentation" = "https://maddyguthridge.github.io/Jestspectation"
"Bug Tracker" = "https://github.com/MaddyGuthridge/Jestspectation/issues"

[tool.pytest.ini_options]
addopts = '--doctest-glob="README.md" --doctest-glob="docs/**.md"'

[tool.mypy]
check_untyped_defs = true
files = ["jestspectation", "tests"]

[tool.flake8]
exclude = ['.git', '__pycache__', 'dist', 'site']

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    'if TYPE_CHECKING:',
    'return NotImplemented',
    '@overload',
    'raise AssertionError',
    'raise NotImplementedError',
]

[tool.poetry.dependencies]
python = "^3.9"
typing-extensions = "^4.5.0"
flake8-pyproject = "^1.2.3"

[tool.poetry.group.dev.dependencies]
mypy = "^1.14.1"
flake8 = "^7.1.1"
pytest = "^8.3.4"
autopep8 = "^2.3.1"
coverage = "^7.6.10"
mkdocs = "^1.5.3"
mkdocs-gen-files = "^0.5.0"
mkdocs-material = "^9.5.49"
mkdocstrings = { version = "^0.27.0", extras = ["python"] }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
